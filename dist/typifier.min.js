/**
 * typifier
 *
 * The javascript library to get or check the type of a given variable.
 *
 * @version 0.0.12
 * @date 2022-07-05T10:55:12.079Z
 * @link https://github.com/magynhard/typifier
 * @author Matthäus J. N. Beyrle
 * @copyright Matthäus J. N. Beyrle
 */
var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function t(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var Typifier=function(){function Typifier(){_classCallCheck(this,Typifier)}return _createClass(Typifier,null,[{key:"getVersion",value:function(){return Typifier._version}},{key:"isArray",value:function(e){return e instanceof Array&&"Array"===e.constructor.name}},{key:"isObject",value:function(e){return e instanceof Object&&"Object"===e.constructor.name}},{key:"isString",value:function(e){return"string"==typeof e}},{key:"isStringClass",value:function(e){return e instanceof Object&&"String"===e.constructor.name}},{key:"isNumber",value:function(e){return"number"==typeof e}},{key:"isNumberClass",value:function(e){return e instanceof Object&&"Number"===e.constructor.name}},{key:"isNumberString",value:function isNumberString(value){var self=Typifier;if(!self.isString(value)&&!self.isStringClass(value))return!1;var number_regex=/^[0-9._]+$/g,hex_regex=/^0[xX][0-9A-Fa-f]+$/g;if(!value.match(number_regex)&&!value.match(hex_regex))return!1;try{return eval(value),!0}catch(e){return!1}}},{key:"isDate",value:function(e){return e instanceof Date}},{key:"isRegExp",value:function(e){return e instanceof RegExp}},{key:"isNaN",value:function(e){return"number"==typeof e&&"NaN"===e.toString()}},{key:"isInfinity",value:function(e){return e===1/0}},{key:"isUndefined",value:function(e){return void 0===e}},{key:"isNull",value:function(e){return null===typeof e}},{key:"isBoolean",value:function(e){return"boolean"==typeof e||e instanceof Object&&"Boolean"===e.constructor.name}},{key:"isBooleanClass",value:function(e){return e instanceof Object&&"Boolean"===e.constructor.name}},{key:"isFunction",value:function(e){return"function"==typeof e}},{key:"is",value:function(e,n){return Typifier.getType(n)===e}},{key:"getType",value:function(e){var n=Typifier;if(n.isArray(e))return"Array";if(n.isObject(e))return"Object";if(n.isString(e))return"string";if(n.isStringClass(e))return"String";if(n.isNumber(e))return"number";if(n.isNumberClass(e))return"Number";if(n.isDate(e))return"Date";if(n.isRegExp(e))return"RegExp";if(n.isNaN(e))return"NaN";if(n.isInfinity(e))return"Infinity";if(n.isUndefined(e))return"undefined";if(n.isNull(e))return"null";if(n.isBoolean(e))return"boolean";if(n.isBooleanClass(e))return"Boolean";if(n.isFunction(e))return"function";n="Unknown",n=e&&e.constructor?e.constructor.name:e&&e.prop&&e.prop.constructor?e.prop.constructor:void 0===e?"undefined":_typeof(e);return LuckyCase.toPascalCase(n)}}]),Typifier}();Typifier._version="0.0.12";