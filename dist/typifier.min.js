/**
 * typifier
 *
 * The javascript library to get or check the type of a given variable.
 *
 * @version 0.0.10
 * @date 2022-05-20T16:39:57.906Z
 * @link https://github.com/magynhard/typifier
 * @author Matthäus J. N. Beyrle
 * @copyright Matthäus J. N. Beyrle
 */
var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},_createClass=function(){function r(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(n,e,t){return e&&r(n.prototype,e),t&&r(n,t),n}}();function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var Typifier=function(){function t(){_classCallCheck(this,t)}return _createClass(t,null,[{key:"getVersion",value:function(){return t._version}},{key:"isArray",value:function(n){return n instanceof Array&&"Array"===n.constructor.name}},{key:"isObject",value:function(n){return n instanceof Object&&"Object"===n.constructor.name}},{key:"isString",value:function(n){return"string"==typeof n}},{key:"isStringClass",value:function(n){return n instanceof Object&&"String"===n.constructor.name}},{key:"isNumber",value:function(n){return"number"==typeof n}},{key:"isNumberClass",value:function(n){return n instanceof Object&&"Number"===n.constructor.name}},{key:"isDate",value:function(n){return n instanceof Date}},{key:"isRegExp",value:function(n){return n instanceof RegExp}},{key:"isNaN",value:function(n){return"number"==typeof n&&"NaN"===n.toString()}},{key:"isInfinity",value:function(n){return n===1/0}},{key:"isUndefined",value:function(n){return void 0===n}},{key:"isNull",value:function(n){return null===typeof n}},{key:"isBoolean",value:function(n){return"boolean"==typeof n||n instanceof Object&&"Boolean"===n.constructor.name}},{key:"isBooleanClass",value:function(n){return n instanceof Object&&"Boolean"===n.constructor.name}},{key:"isFunction",value:function(n){return"function"==typeof n}},{key:"is",value:function(n,e){return t.getType(e)===n}},{key:"getType",value:function(n){var e=t;if(e.isArray(n))return"Array";if(e.isObject(n))return"Object";if(e.isString(n))return"string";if(e.isStringClass(n))return"String";if(e.isNumber(n))return"number";if(e.isNumberClass(n))return"Number";if(e.isDate(n))return"Date";if(e.isRegExp(n))return"RegExp";if(e.isNaN(n))return"NaN";if(e.isInfinity(n))return"Infinity";if(e.isUndefined(n))return"undefined";if(e.isNull(n))return"null";if(e.isBoolean(n))return"boolean";if(e.isBooleanClass(n))return"Boolean";if(e.isFunction(n))return"function";e="Unknown",e=n&&n.constructor?n.constructor.name:n&&n.prop&&n.prop.constructor?n.prop.constructor:void 0===n?"undefined":_typeof(n);return LuckyCase.toPascalCase(e)}}]),t}();Typifier._version="0.0.10";